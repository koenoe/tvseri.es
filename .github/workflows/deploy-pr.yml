name: Deploy PR

on:
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_DEV }}
          aws-region: eu-west-2

      - name: Setup AWS Profile
        run: |
          aws configure set region eu-west-2 --profile tvseries-dev
          aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }} --profile tvseries-dev
          aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }} --profile tvseries-dev
          aws configure set aws_session_token ${{ env.AWS_SESSION_TOKEN }} --profile tvseries-dev

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Deploy PR
        run: pnpm sst deploy --stage pr-${{ github.event.pull_request.number }}

      - name: Update PR with Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = `https://pr-${context.issue.number}.dev.tvseri.es`;
            const commentBody = `## ðŸš€ PR Preview Environment

            Your changes have been deployed to a preview environment:

            **ðŸ”— Preview URL:** ${previewUrl}

            > This environment will be automatically updated when new commits are pushed to this PR.
            > The environment will be destroyed when the PR is closed.`;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existingComment = comments.find(comment =>
              comment.user.login === 'github-actions[bot]' &&
              comment.body.includes('PR Preview Environment')
            );

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: commentBody,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody,
              });
            }
